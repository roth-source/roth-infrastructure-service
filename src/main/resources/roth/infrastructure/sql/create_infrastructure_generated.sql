-- MySQL Script generated by MySQL Workbench
-- Mon Jun 15 00:17:41 2015
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema infrastructure
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Table `user`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `user` (
  `id` CHAR(14) NOT NULL,
  `active` TINYINT(1) NOT NULL,
  `type` VARCHAR(45) NOT NULL,
  `email` VARCHAR(45) NOT NULL,
  `password` VARCHAR(45) NOT NULL,
  `publicKey` TEXT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `org`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `org` (
  `id` CHAR(14) NOT NULL,
  `active` TINYINT(1) NOT NULL,
  `type` VARCHAR(45) NULL,
  `name` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `member`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `member` (
  `id` CHAR(14) NOT NULL,
  `active` TINYINT(1) NOT NULL,
  `org_id` CHAR(14) NOT NULL,
  `user_id` CHAR(14) NOT NULL,
  `type` VARCHAR(45) NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_ member_org1_idx` (`org_id` ASC),
  INDEX `fk_ member_user1_idx` (`user_id` ASC),
  CONSTRAINT `fk_ member_org1`
    FOREIGN KEY (`org_id`)
    REFERENCES `org` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_ member_user1`
    FOREIGN KEY (`user_id`)
    REFERENCES `user` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `app`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `app` (
  `id` CHAR(14) NOT NULL,
  `active` TINYINT(1) NOT NULL,
  `org_id` CHAR(14) NOT NULL,
  `type` VARCHAR(45) NULL,
  `name` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_app_org1_idx` (`org_id` ASC),
  CONSTRAINT `fk_app_org1`
    FOREIGN KEY (`org_id`)
    REFERENCES `org` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `repo`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `repo` (
  `id` VARCHAR(14) NOT NULL,
  `active` TINYINT(1) NOT NULL,
  `org_id` CHAR(14) NOT NULL,
  `type` VARCHAR(45) NOT NULL,
  `name` VARCHAR(45) NOT NULL,
  `apiKey` VARCHAR(255) NULL,
  `username` VARCHAR(255) NULL,
  `password` VARCHAR(255) NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_repo_org1_idx` (`org_id` ASC),
  CONSTRAINT `fk_repo_org1`
    FOREIGN KEY (`org_id`)
    REFERENCES `org` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `package`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `package` (
  `id` CHAR(14) NOT NULL,
  `active` TINYINT(1) NOT NULL,
  `org_id` CHAR(14) NOT NULL,
  `type` VARCHAR(45) NOT NULL,
  `name` VARCHAR(45) NOT NULL,
  `excludes` TEXT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_package_org1_idx` (`org_id` ASC),
  CONSTRAINT `fk_package_org1`
    FOREIGN KEY (`org_id`)
    REFERENCES `org` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `source`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `source` (
  `id` CHAR(14) NOT NULL,
  `active` TINYINT(1) NOT NULL,
  `app_id` CHAR(14) NOT NULL,
  `repo_id` VARCHAR(14) NOT NULL,
  `package_id` CHAR(14) NOT NULL,
  `type` VARCHAR(45) NOT NULL,
  `url` VARCHAR(255) NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_ source_app1_idx` (`app_id` ASC),
  INDEX `fk_source_repo1_idx` (`repo_id` ASC),
  INDEX `fk_source_package1_idx` (`package_id` ASC),
  CONSTRAINT `fk_ source_app1`
    FOREIGN KEY (`app_id`)
    REFERENCES `app` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_source_repo1`
    FOREIGN KEY (`repo_id`)
    REFERENCES `repo` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_source_package1`
    FOREIGN KEY (`package_id`)
    REFERENCES `package` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `dist`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `dist` (
  `id` CHAR(14) NOT NULL,
  `active` TINYINT(1) NOT NULL,
  `type` VARCHAR(45) NOT NULL,
  `name` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `host`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `host` (
  `id` CHAR(14) NOT NULL,
  `active` TINYINT(1) NOT NULL,
  `org_id` CHAR(14) NOT NULL,
  `type` VARCHAR(45) NOT NULL,
  `name` VARCHAR(45) NOT NULL,
  `apiKey` VARCHAR(255) NOT NULL,
  `username` VARCHAR(45) NULL,
  `sshKeyId` VARCHAR(255) NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_host_org1_idx` (`org_id` ASC),
  CONSTRAINT `fk_host_org1`
    FOREIGN KEY (`org_id`)
    REFERENCES `org` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `server`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `server` (
  `id` CHAR(14) NOT NULL,
  `active` TINYINT(1) NOT NULL,
  `org_id` CHAR(14) NULL,
  `host_id` CHAR(14) NULL,
  `type` VARCHAR(45) NOT NULL,
  `name` VARCHAR(45) NOT NULL,
  `ip` VARCHAR(45) NULL,
  `key` VARCHAR(45) NULL,
  `details` VARCHAR(255) NULL,
  `createdOn` DATETIME NULL,
  `destroyedOn` DATETIME NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_server_host1_idx` (`host_id` ASC),
  INDEX `fk_server_org1_idx` (`org_id` ASC),
  CONSTRAINT `fk_server_host1`
    FOREIGN KEY (`host_id`)
    REFERENCES `host` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_server_org1`
    FOREIGN KEY (`org_id`)
    REFERENCES `org` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `registrar`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `registrar` (
  `id` CHAR(14) NOT NULL,
  `active` TINYINT(1) NOT NULL,
  `org_id` CHAR(14) NOT NULL,
  `type` VARCHAR(45) NOT NULL,
  `name` VARCHAR(45) NOT NULL,
  `apiKey` VARCHAR(255) NULL,
  `username` VARCHAR(45) NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_registrar_org1_idx` (`org_id` ASC),
  CONSTRAINT `fk_registrar_org1`
    FOREIGN KEY (`org_id`)
    REFERENCES `org` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `domain`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `domain` (
  `id` CHAR(14) NOT NULL,
  `active` TINYINT(1) NOT NULL,
  `org_id` CHAR(14) NULL,
  `registrar_id` CHAR(14) NULL,
  `type` VARCHAR(45) NULL,
  `name` VARCHAR(255) NOT NULL,
  `expiresOn` DATETIME NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_domain_registrar1_idx` (`registrar_id` ASC),
  INDEX `fk_domain_org1_idx` (`org_id` ASC),
  CONSTRAINT `fk_domain_registrar1`
    FOREIGN KEY (`registrar_id`)
    REFERENCES `registrar` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_domain_org1`
    FOREIGN KEY (`org_id`)
    REFERENCES `org` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `nameserver`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `nameserver` (
  `id` CHAR(14) NOT NULL,
  `active` TINYINT(1) NOT NULL,
  `org_id` CHAR(14) NOT NULL,
  `type` VARCHAR(45) NOT NULL,
  `name` VARCHAR(45) NOT NULL,
  `apiKey` VARCHAR(255) NULL,
  `username` VARCHAR(45) NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_ nameserver_org1_idx` (`org_id` ASC),
  CONSTRAINT `fk_ nameserver_org1`
    FOREIGN KEY (`org_id`)
    REFERENCES `org` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `record`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `record` (
  `id` CHAR(14) NOT NULL,
  `active` TINYINT(1) NOT NULL,
  `nameserver_id` CHAR(14) NOT NULL,
  `domain_id` CHAR(14) NOT NULL,
  `server_id` CHAR(14) NULL,
  `type` VARCHAR(45) NOT NULL,
  `name` VARCHAR(255) NOT NULL,
  `value` VARCHAR(255) NULL,
  `routed` TINYINT(1) NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_record_nameserver1_idx` (`nameserver_id` ASC),
  INDEX `fk_record_domain1_idx` (`domain_id` ASC),
  INDEX `fk_record_server1_idx` (`server_id` ASC),
  CONSTRAINT `fk_record_nameserver1`
    FOREIGN KEY (`nameserver_id`)
    REFERENCES `nameserver` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_record_domain1`
    FOREIGN KEY (`domain_id`)
    REFERENCES `domain` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_record_server1`
    FOREIGN KEY (`server_id`)
    REFERENCES `server` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `authority`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `authority` (
  `id` CHAR(14) NOT NULL,
  `active` TINYINT(1) NOT NULL,
  `org_id` CHAR(14) NOT NULL,
  `type` VARCHAR(45) NOT NULL,
  `name` VARCHAR(45) NOT NULL,
  `apiKey` VARCHAR(45) NOT NULL,
  `username` VARCHAR(45) NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_authority_org1_idx` (`org_id` ASC),
  CONSTRAINT `fk_authority_org1`
    FOREIGN KEY (`org_id`)
    REFERENCES `org` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `cert`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `cert` (
  `id` CHAR(14) NOT NULL,
  `active` TINYINT(1) NOT NULL,
  `domain_id` CHAR(14) NOT NULL,
  `authority_id` CHAR(14) NULL,
  `type` VARCHAR(45) NULL,
  `certificate` TEXT NOT NULL,
  `privateKey` TEXT NOT NULL,
  `wildcard` TINYINT(1) NOT NULL,
  `startsOn` DATETIME NULL,
  `endsOn` DATETIME NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_cert_domain1_idx` (`domain_id` ASC),
  INDEX `fk_cert_authority1_idx` (`authority_id` ASC),
  CONSTRAINT `fk_cert_domain1`
    FOREIGN KEY (`domain_id`)
    REFERENCES `domain` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_cert_authority1`
    FOREIGN KEY (`authority_id`)
    REFERENCES `authority` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `env`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `env` (
  `id` CHAR(14) NOT NULL,
  `active` TINYINT(1) NOT NULL,
  `app_id` CHAR(14) NOT NULL,
  `type` VARCHAR(45) NOT NULL,
  `name` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_env_app1_idx` (`app_id` ASC),
  CONSTRAINT `fk_env_app1`
    FOREIGN KEY (`app_id`)
    REFERENCES `app` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `setting`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `setting` (
  `id` CHAR(14) NOT NULL,
  `active` TINYINT(1) NOT NULL,
  `org_id` CHAR(14) NULL,
  `app_id` CHAR(14) NULL,
  `type` VARCHAR(45) NOT NULL,
  `value` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_setting_org1_idx` (`org_id` ASC),
  INDEX `fk_setting_app1_idx` (`app_id` ASC),
  CONSTRAINT `fk_setting_org1`
    FOREIGN KEY (`org_id`)
    REFERENCES `org` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_setting_app1`
    FOREIGN KEY (`app_id`)
    REFERENCES `app` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `webserver`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `webserver` (
  `id` CHAR(14) NOT NULL,
  `active` TINYINT(1) NOT NULL,
  `server_id` CHAR(14) NOT NULL,
  `env_id` CHAR(14) NOT NULL,
  `type` VARCHAR(45) NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_ webserver_server1_idx` (`server_id` ASC),
  INDEX `fk_webserver_env1_idx` (`env_id` ASC),
  CONSTRAINT `fk_ webserver_server1`
    FOREIGN KEY (`server_id`)
    REFERENCES `server` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_webserver_env1`
    FOREIGN KEY (`env_id`)
    REFERENCES `env` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `virtualhost`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `virtualhost` (
  `id` CHAR(14) NOT NULL,
  `active` TINYINT(1) NOT NULL,
  `record_id` CHAR(14) NOT NULL,
  `webserver_id` CHAR(14) NOT NULL,
  `type` VARCHAR(45) NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_virtualhost_record1_idx` (`record_id` ASC),
  INDEX `fk_virtualhost_webserver1_idx` (`webserver_id` ASC),
  CONSTRAINT `fk_ virtualhost_record1`
    FOREIGN KEY (`record_id`)
    REFERENCES `record` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_virtualhost_webserver1`
    FOREIGN KEY (`webserver_id`)
    REFERENCES `webserver` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `install`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `install` (
  `id` CHAR(14) NOT NULL,
  `active` TINYINT(1) NOT NULL,
  `dist_id` CHAR(14) NOT NULL,
  `server_id` CHAR(14) NOT NULL,
  `type` VARCHAR(45) NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_ install_dist1_idx` (`dist_id` ASC),
  INDEX `fk_ install_server1_idx` (`server_id` ASC),
  CONSTRAINT `fk_install_dist1`
    FOREIGN KEY (`dist_id`)
    REFERENCES `dist` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_ install_server1`
    FOREIGN KEY (`server_id`)
    REFERENCES `server` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `permission`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `permission` (
  `id` CHAR(14) NOT NULL,
  `active` TINYINT(1) NOT NULL,
  `member_id` CHAR(14) NOT NULL,
  `type` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_permission_member1_idx` (`member_id` ASC),
  CONSTRAINT `fk_permission_member1`
    FOREIGN KEY (`member_id`)
    REFERENCES `member` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `release`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `release` (
  `id` CHAR(14) NOT NULL,
  `active` TINYINT(1) NOT NULL,
  `app_id` CHAR(14) NOT NULL,
  `type` VARCHAR(45) NOT NULL,
  `version` VARCHAR(255) NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_release_app1_idx` (`app_id` ASC),
  CONSTRAINT `fk_release_app1`
    FOREIGN KEY (`app_id`)
    REFERENCES `app` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `branch`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `branch` (
  `id` CHAR(14) NOT NULL,
  `active` TINYINT(1) NOT NULL,
  `source_id` CHAR(14) NOT NULL,
  `type` VARCHAR(45) NOT NULL,
  `name` VARCHAR(255) NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_branch_source1_idx` (`source_id` ASC),
  CONSTRAINT `fk_branch_source1`
    FOREIGN KEY (`source_id`)
    REFERENCES `source` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `deploy`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `deploy` (
  `id` CHAR(14) NOT NULL,
  `active` TINYINT(1) NOT NULL,
  `branch_id` CHAR(14) NOT NULL,
  `release_id` CHAR(14) NOT NULL,
  `type` VARCHAR(45) NOT NULL,
  `name` VARCHAR(255) NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_archive_branch1_idx` (`branch_id` ASC),
  INDEX `fk_archive_release1_idx` (`release_id` ASC),
  CONSTRAINT `fk_archive_branch1`
    FOREIGN KEY (`branch_id`)
    REFERENCES `branch` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_archive_release1`
    FOREIGN KEY (`release_id`)
    REFERENCES `release` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `context`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `context` (
  `id` CHAR(14) NOT NULL COMMENT '	',
  `active` TINYINT(1) NOT NULL,
  `webserver_id` CHAR(14) NOT NULL,
  `deploy_id` CHAR(14) NOT NULL,
  `type` VARCHAR(45) NULL,
  `path` VARCHAR(255) NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_deployment_webserver1_idx` (`webserver_id` ASC),
  INDEX `fk_context_deploy1_idx` (`deploy_id` ASC),
  CONSTRAINT `fk_deployment_webserver1`
    FOREIGN KEY (`webserver_id`)
    REFERENCES `webserver` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_context_deploy1`
    FOREIGN KEY (`deploy_id`)
    REFERENCES `deploy` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `log`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `log` (
  `id` CHAR(14) NOT NULL,
  `active` TINYINT(1) NOT NULL,
  `user_id` CHAR(14) NOT NULL,
  `type` VARCHAR(45) NOT NULL,
  `table` VARCHAR(45) NOT NULL,
  `key` CHAR(14) NOT NULL,
  `loggedOn` DATETIME NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_log_user1_idx` (`user_id` ASC),
  CONSTRAINT `fk_log_user1`
    FOREIGN KEY (`user_id`)
    REFERENCES `user` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `change`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `change` (
  `id` CHAR(14) NOT NULL,
  `active` TINYINT(1) NOT NULL,
  `log_id` CHAR(14) NOT NULL,
  `type` VARCHAR(45) NULL,
  `name` VARCHAR(45) NOT NULL,
  `oldValue` TEXT NULL,
  `newValue` TEXT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_change_log1_idx` (`log_id` ASC),
  CONSTRAINT `fk_change_log1`
    FOREIGN KEY (`log_id`)
    REFERENCES `log` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `target`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `target` (
  `id` CHAR(14) NOT NULL,
  `active` TINYINT(1) NOT NULL,
  `branch_id` CHAR(14) NOT NULL,
  `env_id` CHAR(14) NOT NULL,
  `type` VARCHAR(45) NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_env_branch_env1_idx` (`env_id` ASC),
  INDEX `fk_env_branch_branch1_idx` (`branch_id` ASC),
  CONSTRAINT `fk_env_branch_env1`
    FOREIGN KEY (`env_id`)
    REFERENCES `env` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_env_branch_branch1`
    FOREIGN KEY (`branch_id`)
    REFERENCES `branch` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `database`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `database` (
  `id` CHAR(14) NOT NULL,
  `active` TINYINT(1) NOT NULL,
  `env_id` CHAR(14) NOT NULL,
  `type` VARCHAR(45) NOT NULL,
  `name` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_database_env1_idx` (`env_id` ASC),
  CONSTRAINT `fk_database_env1`
    FOREIGN KEY (`env_id`)
    REFERENCES `env` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
